{"ast":null,"code":"var _jsxFileName = \"/home/itu/s5/MrRojo/first_react/src/mycomp/Statistics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StatisticsRow from './StatisticsRow';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = () => {\n  _s();\n  // const [seasonStats, setSeasonStats] = useState([]);\n\n  // useEffect(() => {\n  //   fetch('https://jsonplaceholder.typicode.com/todos/1')\n  //     .then(response => response.json())\n  //     .then(data => setSeasonStats(data))\n  //     .catch(error => console.error('Erreur lors de la récupération des données:', error));\n  // }, []); \n\n  // return (\n  //   <div className=\"container mt-5\">\n  //     <h2 className=\"text-center mb-4\">STATISTIQUES SAISON 2023-2024</h2>\n  //     <table className=\"table table-bordered table-striped\">\n  //       <thead className=\"table-dark\">\n  //         <tr>\n  //           <th>CLASSEMENT</th>\n  //           <th>JOUEUR</th>\n  //           <th>ÉQUIPE</th>\n  //           <th>M</th>\n  //           <th>MJ</th>\n  //           <th>PPM</th>\n  //           <th>RPM</th>\n  //           <th>PDPM</th>\n  //           <th>MPM</th>\n  //           <th>EFF</th>\n  //           <th>FG%</th>\n  //           <th>3P%</th>\n  //           <th>%LF</th>\n  //           <th>DÉSACTIVÉ</th>\n  //           <th>DÉF</th>\n  //           <th>IPM</th>\n  //           <th>CPM</th>\n  //           <th>BP</th>\n  //           <th>FP</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         {/* {seasonStats.map((playerStat, index) => (\n  //           <StatisticsRow key={index} {...playerStat} />\n  //         ))} */}\n  //         <tr>\n  //           <td>1</td>\n  //           <td>Player Name</td>\n  //           <td>Team</td>\n  //           <td>13</td>\n  //           <td>13</td>\n  //           <td>31.9</td>\n  //           <td>11.2</td>\n  //           <td>6.2</td>\n  //           <td>34.1</td>\n  //           <td>36.4</td>\n  //           <td>50.2</td>\n  //           <td>31.8</td>\n  //           <td>88.5</td>\n  //           <td>DÉSACTIVÉ</td>\n  //           <td>8</td>\n  //           <td>0.9</td>\n  //           <td>1.5</td>\n  //           <td>3.5</td>\n  //           <td>2.7</td>\n  //         </tr>\n  //       </tbody>\n  //     </table>\n  //   </div>\n  // );\n  const [todoData, setTodoData] = useState(null);\n  useEffect(() => {\n    // Effectuer une requête vers l'URL du service web pour récupérer des données\n    fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(data => setTodoData(data)).catch(error => console.error('Erreur lors de la récupération des données:', error));\n  }, []); // Le tableau vide en tant que dépendance signifie que cet effet ne s'exécute qu'une fois après le montage du composant\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Exemple de r\\xE9cup\\xE9ration de donn\\xE9es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), todoData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: todoData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Completed: ${todoData.completed}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Statistics, \"GtZ3/80yBRsAn0N08otr/Vr9VCg=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","useState","useEffect","StatisticsRow","jsxDEV","_jsxDEV","Statistics","_s","todoData","setTodoData","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","completed","_c","$RefreshReg$"],"sources":["/home/itu/s5/MrRojo/first_react/src/mycomp/Statistics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StatisticsRow from './StatisticsRow';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Statistics = () => {\n  // const [seasonStats, setSeasonStats] = useState([]);\n\n  // useEffect(() => {\n  //   fetch('https://jsonplaceholder.typicode.com/todos/1')\n  //     .then(response => response.json())\n  //     .then(data => setSeasonStats(data))\n  //     .catch(error => console.error('Erreur lors de la récupération des données:', error));\n  // }, []); \n\n  // return (\n  //   <div className=\"container mt-5\">\n  //     <h2 className=\"text-center mb-4\">STATISTIQUES SAISON 2023-2024</h2>\n  //     <table className=\"table table-bordered table-striped\">\n  //       <thead className=\"table-dark\">\n  //         <tr>\n  //           <th>CLASSEMENT</th>\n  //           <th>JOUEUR</th>\n  //           <th>ÉQUIPE</th>\n  //           <th>M</th>\n  //           <th>MJ</th>\n  //           <th>PPM</th>\n  //           <th>RPM</th>\n  //           <th>PDPM</th>\n  //           <th>MPM</th>\n  //           <th>EFF</th>\n  //           <th>FG%</th>\n  //           <th>3P%</th>\n  //           <th>%LF</th>\n  //           <th>DÉSACTIVÉ</th>\n  //           <th>DÉF</th>\n  //           <th>IPM</th>\n  //           <th>CPM</th>\n  //           <th>BP</th>\n  //           <th>FP</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         {/* {seasonStats.map((playerStat, index) => (\n  //           <StatisticsRow key={index} {...playerStat} />\n  //         ))} */}\n  //         <tr>\n  //           <td>1</td>\n  //           <td>Player Name</td>\n  //           <td>Team</td>\n  //           <td>13</td>\n  //           <td>13</td>\n  //           <td>31.9</td>\n  //           <td>11.2</td>\n  //           <td>6.2</td>\n  //           <td>34.1</td>\n  //           <td>36.4</td>\n  //           <td>50.2</td>\n  //           <td>31.8</td>\n  //           <td>88.5</td>\n  //           <td>DÉSACTIVÉ</td>\n  //           <td>8</td>\n  //           <td>0.9</td>\n  //           <td>1.5</td>\n  //           <td>3.5</td>\n  //           <td>2.7</td>\n  //         </tr>\n  //       </tbody>\n  //     </table>\n  //   </div>\n  // );\n  const [todoData, setTodoData] = useState(null);\n\n  useEffect(() => {\n    // Effectuer une requête vers l'URL du service web pour récupérer des données\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(data => setTodoData(data))\n      .catch(error => console.error('Erreur lors de la récupération des données:', error));\n  }, []); // Le tableau vide en tant que dépendance signifie que cet effet ne s'exécute qu'une fois après le montage du composant\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center mb-4\">Exemple de récupération de données</h1>\n      {todoData ? (\n        <div>\n          <h2>{todoData.title}</h2>\n          <p>{`Completed: ${todoData.completed}`}</p>\n        </div>\n      ) : (\n        <p>Chargement...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Statistics;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,8CAA8C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC,CAAC;EACxF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bd,OAAA;MAAIa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvEf,QAAQ,gBACPH,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAKX,QAAQ,CAACgB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBlB,OAAA;QAAAc,QAAA,EAAK,cAAaX,QAAQ,CAACiB,SAAU;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,gBAENlB,OAAA;MAAAc,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACpB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAzFID,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AA2FhB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}